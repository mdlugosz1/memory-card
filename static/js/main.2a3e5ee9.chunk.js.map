{"version":3,"sources":["components/Header.js","components/Footer.js","components/utils/helpers.js","components/Message.js","components/Card.js","components/Score.js","components/Content.js","images/cardback.png","components/App.js","index.js"],"names":["Header","className","Footer","href","setupImages","img","imagesArray","randomNumber","Math","round","random","i","image","url","id","art","name","push","getTenImages","startIndex","imgArr","filter","index","Message","props","score","onClick","setFinished","Card","alt","src","e","target","dataset","chosenCards","includes","finished","changeOrder","cards","map","value","sort","a","b","setChosenCards","setScore","Score","bestScore","Content","useState","setCards","startCardSet","data","useEffect","nextCardSet","setBestScore","isFinished","App","images","setImages","fetch","then","json","response","getData","length","cardback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a3e5ee9.chunk.js","sourcesContent":["import '../styles/Header.css';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <p className=\"title\">Gwent Memory Card Game</p>\n    </header>\n  );\n};\n\nexport default Header;\n","import '../styles/Footer.css';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div>\n        <p>\n          Made by\n          <a className=\"git\" href=\"https://github.com/mdlugosz1\">\n            <i className=\"fab fa-github\"></i>\n          </a>\n        </p>\n        <p>\n          Site uses gwent one API to fetch images which can be found{' '}\n          <a className=\"api\" href=\"https://api.gwent.one\">\n            here\n          </a>\n          .\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","const setupImages = (img) => {\n  const imagesArray = [];\n  const randomNumber = Math.round(Math.random() * 1048);\n\n  for (let i = randomNumber; i < randomNumber + 100; i++) {\n    const image = {\n      url: `https://gwent.one/image/gwent/assets/card/art/medium/${img[i].id.art}.jpg`,\n      name: img[i].name,\n    };\n    imagesArray.push(image);\n  }\n\n  return imagesArray;\n};\n\nconst getTenImages = (startIndex, imgArr) => {\n  const images = imgArr.filter((image, index) => {\n    return index >= startIndex && index < startIndex + 10;\n  });\n\n  return images;\n};\n\nconst shuffleArray = (images) => {\n  const newArr = images\n    .map((value) => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value);\n\n  return newArr;\n};\n\nexport { getTenImages, shuffleArray, setupImages };\n","import '../styles/Message.css';\n\nconst Message = (props) => {\n  return (\n    <div className=\"message\">\n      <div className=\"message-content\">\n        {props.score === 100 && (\n          <p>Congratulations! You completed whole game! Refresh page to get new set of cards.</p>\n        )}\n        {props.score < 100 && <p>Keep going!</p>}\n        <button onClick={() => props.setFinished(false)}>\n          {props.score === 100 && 'Close'}\n          {props.score < 100 && 'Try again'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import '../styles/Card.css';\nimport { shuffleArray } from './utils/helpers';\n\nconst Card = (props) => {\n  const play = (e) => {\n    const name = e.target.dataset.id;\n\n    if (props.chosenCards.includes(name)) {\n      props.setFinished(!props.finished);\n    } else {\n      props.changeOrder(shuffleArray(props.cards));\n      props.setChosenCards([...props.chosenCards, name]);\n      props.setScore(props.score + 1);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <img alt=\"\" src={props.image.url} data-id={props.image.name} onClick={play}></img>\n      <h5>{props.image.name}</h5>\n    </div>\n  );\n};\n\nexport default Card;\n","import '../styles/Score.css';\n\nconst Score = (props) => {\n  return (\n    <div className=\"score-board\">\n      <p>\n        Current score: <span>{props.score}</span>\n      </p>\n      <p>\n        Best score: <span className=\"best\">{props.bestScore}</span>\n      </p>\n    </div>\n  );\n};\n\nexport default Score;\n","import { useState, useEffect } from 'react';\nimport { getTenImages } from './utils/helpers';\nimport '../styles/Content.css';\nimport Message from './Message';\nimport Card from './Card';\nimport Score from './Score';\n\nconst Content = (props) => {\n  const [cards, setCards] = useState([]);\n  const startCardSet = getTenImages(0, props.data);\n\n  useEffect(() => {\n    setCards(startCardSet);\n  }, []);\n\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    if (score !== 0 && score % 10 === 0) {\n      const nextCardSet = getTenImages(score, props.data);\n      setChosenCards([]);\n      setCards(nextCardSet);\n    }\n  }, [score]);\n\n  const [bestScore, setBestScore] = useState(0);\n\n  useEffect(() => {\n    if (score > bestScore) {\n      setBestScore(score);\n    }\n  }, [score]);\n\n  const [finished, setFinished] = useState(false);\n\n  useEffect(() => {\n    if (finished) {\n      setChosenCards([]);\n      setCards(startCardSet);\n    } else {\n      setScore(0);\n    }\n  }, [finished]);\n\n  const [chosenCards, setChosenCards] = useState([]);\n\n  return (\n    <section className=\"content\">\n      <div className=\"container\">\n        {finished && <Message score={score} setFinished={setFinished} />}\n        <Score score={score} bestScore={bestScore} />\n        {cards.map((image) => {\n          return (\n            <Card\n              image={image}\n              key={image.name}\n              cards={cards}\n              changeOrder={setCards}\n              score={score}\n              setScore={setScore}\n              isFinished={finished}\n              setFinished={setFinished}\n              chosenCards={chosenCards}\n              setChosenCards={setChosenCards}\n            />\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default Content;\n","export default __webpack_public_path__ + \"static/media/cardback.40066493.png\";","import Header from './Header';\nimport Footer from './Footer';\nimport Content from './Content';\nimport { useEffect, useState } from 'react';\nimport { setupImages } from './utils/helpers';\nimport cardback from '../images/cardback.png';\nimport '../styles/App.css';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const getData = await fetch('https://api.gwent.one/?key=data&response=json')\n        .then((value) => value.json())\n        .then((value) => setupImages(value.response));\n\n      setImages(getData);\n    })();\n  }, []);\n\n  if (images.length === 0)\n    return (\n      <div className=\"loading\">\n        <img alt=\"cardback\" src={cardback} className=\"loading-image\"></img>\n        <p>Loading...</p>\n      </div>\n    );\n\n  return (\n    <div className=\"game\">\n      <Header />\n      <Content data={images} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}